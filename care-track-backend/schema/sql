CREATE DATABASE care_home_manager;

USE care_home_manager;

CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    fullname VARCHAR(255) NOT NULL,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    role INT DEFAULT 0,
    user_role VARCHAR(255) NOT NULL, 
    status ENUM('pending', 'approve') DEFAULT 'pending',
    icon VARCHAR(255) NOT NULL,
    is_deleted BOOLEAN DEFAULT false,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE residents (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    birthday DATE NOT NULL,
    room_number INT NOT NULL,
    icon VARCHAR(255) NOT NULL,
    is_deleted BOOLEAN DEFAULT false,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS resident_data_update (
    id INT AUTO_INCREMENT PRIMARY KEY,
    resident_id INT NOT NULL,
    posted_by INT NOT NULL,
    type ENUM(
        'personal_care', 
        'personal_care_hygiene',
        'food_intake',
        'fluid_intake',
        'weight',
        'oxygen_saturation',
        'pulse_rate',
        'temperature',
        'blood_sugar_level',
        'bowel_movement',
        'body_map',
        'incident_accident_form'
    ),
    message VARCHAR(10000),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (resident_id) REFERENCES residents(id),
    FOREIGN KEY (posted_by) REFERENCES users(id),
    INDEX (resident_id),  
    INDEX (created_at)    
);

CREATE TABLE resident_care_plan (
    id INT AUTO_INCREMENT PRIMARY KEY,
    resident_id INT,
    name VARCHAR(255),
    birthday DATE,
    room_number INT,
    care_instructions TEXT,
    medication_schedule TEXT,
    age TEXT,
    medical_history TEXT,
    allergies TEXT,
    medications TEXT,
    key_contacts TEXT,
    support TEXT,
    behavior TEXT,
    personal_care TEXT,
    mobility TEXT,
    sleep TEXT,
    nutrition TEXT,
    updates JSON,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    FOREIGN KEY (resident_id) REFERENCES residents(id) ON DELETE CASCADE
);
